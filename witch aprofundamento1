[1mdiff --git a/README.md b/README.md[m
[1mdeleted file mode 100644[m
[1mindex ca60e24..0000000[m
[1m--- a/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,173 +0,0 @@[m
[31m-# Revis√£o: Setup e Versionamento de Projeto JavaScript via CMD[m
[31m-[m
[31m-Este material re√∫ne,  o **passo a passo**, tudo que vimos at√© agora usando **cmd.exe** no Windows referente aos interesses de *cria√ß√£o de projeto **JS** e Versionamento com **Git***  . Ao final, h√° instru√ß√µes para rodar seu c√≥digo diretamente e breves alternativas.[m
[31m-[m
[31m----[m
[31m-# Sum√°rio de atividades:[m
[31m-[m
[31m-- Instalou/verificou Node.js[m
[31m-    [m
[31m-- Criou pasta, inicializou npm[m
[31m-    [m
[31m-- Estruturou `src`/`dist`, criou `index.js`[m
[31m-    [m
[31m-- Abriu no VS Code[m
[31m-    [m
[31m-- Versionou com Git, criou branch[m
[31m-    [m
[31m-- Commitou e enviou ao GitHub[m
[31m-    [m
[31m-- Aprendeu a rodar no cmd e alternativas r√°pidas.[m
[31m-[m
[31m---- [m
[31m-[m
[31m-# Atividades realizadas[m
[31m-## 1. Instalar e verificar Node.js + npm[m
[31m-[m
[31m-1. **Verificar se j√° est√° instalado**  [m
[31m-   ```bat[m
[31m-   node -v    # ex.: v18.15.0[m
[31m-   npm -v     # ex.: 9.5.0[m
[31m-[m
[31m-Pra que instaler o NOde.Js e NPM?[m
[31m-### 1.2 Por que instalar **Node.js** e **npm**?[m
[31m-[m
[31m-1. **Executar JavaScript fora do navegador**  [m
[31m-   - Com o **Node.js** voc√™ roda scripts JS diretamente no seu computador (linha de comando), ideal para tarefas de automa√ß√£o, testes ou back-end simples.  [m
[31m-   - Exemplo:  [m
[31m-     ```bash[m
[31m-     node src/index.js[m
[31m-     ```[m
[31m-[m
[31m-2. **Gerenciar depend√™ncias e pacotes**  [m
[31m-   - O **npm** (‚ÄúNode Package Manager‚Äù) permite instalar, atualizar e remover bibliotecas de terceiros com um s√≥ comando:  [m
[31m-     ```bash[m
[31m-     npm install express[m
[31m-     ```  [m
[31m-   - Mant√©m suas depend√™ncias versionadas em `package.json`/`package-lock.json`.[m
[31m-[m
[31m-3. **Scripts e automa√ß√£o de tarefas**  [m
[31m-   - No `package.json` voc√™ define atalhos (‚Äúscripts‚Äù) para compilar, testar, executar ou empacotar seu projeto:[m
[31m-     ```jsonc[m
[31m-     "scripts": {[m
[31m-       "build": "webpack --mode production",[m
[31m-       "start": "node src/index.js",[m
[31m-       "test": "jest"[m
[31m-     }[m
[31m-     ```[m
[31m-   - Depois √© s√≥ usar:[m
[31m-     ```bash[m
[31m-     npm run build[m
[31m-     ```[m
[31m-[m
[31m-4. **Ferramentas de desenvolvimento modernas**  [m
[31m-   - Bundlers (Webpack, Parcel, Vite), transpiladores (Babel), linters (ESLint), test runners (Jest), servidores de desenvolvimento (live-server), e muito mais rodam sobre Node.js.[m
[31m-[m
[31m-5. **Criar servidores e APIs**  [m
[31m-   - Com frameworks como **Express** ou **Koa**, voc√™ pode montar um servidor HTTP completo em poucos minutos:[m
[31m-     ```js[m
[31m-     const express = require('express');[m
[31m-     const app = express();[m
[31m-     app.get('/', (req, res) => res.send('Ol√°, mundo!'));[m
[31m-     app.listen(3000);[m
[31m-     ```[m
[31m-[m
[31m----[m
[31m-[m
[31m-> **Em resumo:**  [m
[31m-> - **Node.js** fornece o runtime JavaScript no desktop/servidor.  [m
[31m-> - **npm** √© o ecossistema de pacotes e o sistema de scripts que agiliza seu fluxo de trabalho.[m
[31m-[m
[31m-## 2. Criar pasta do projeto e iniciar npm[m
[31m-[m
[31m-```[m
[31m-1. cd C:\Users\jmtec\Desktop # verificar em que diret√≥rio a pasta est√° sendo criada[m
[31m-2. `md RevisaoJs`         # cria a pasta[m
[31m-3. `cd RevisaoJs `        # entra nela[m
[31m-4. `npm init -y`          # gera package.json com valores padr√£o[m
[31m-[m
[31m-* ***`npm init -y`** salta o assistente e usa defaults.[m
[31m-* ***Alternativa**: `npm init` sem `-y` para responder perguntas manualmente. - haver√£o perguntas no jason para a cria√ß√£o do projeto[m
[31m-[m
[31m-```[m
[31m-[m
[31m-## 3. Estruturar pastas e criar `index.js`[m
[31m-[m
[31m-```[m
[31m-1. `md src dist`  # comando q cria a pasta[m
[31m-2. `type nul > src\index.js`  [m
[31m-[m
[31m-* ***`type nul > ‚Ä¶`** cria (ou zera) o arquivo vazio.[m
[31m-* ***Alternativa**: `npm init` sem `-y` para responder perguntas manualmente.[m
[31m-```[m
[31m-[m
[31m-## 4. Abrir no VS Code[m
[31m-```[m
[31m-`code .` comando que abre o Vscode dentro do CMD[m
[31m-[m
[31m-- **Abre** todo o projeto no VS Code.[m
[31m-    [m
[31m- * ***Alternativa**:  Use `start .` para abrir no Explorer e depois clique em seu editor favorito.[m
[31m-```[m
[31m-[m
[31m-## 5. Escrever um `console.log`[m
[31m-[m
[31m- # no arquivo do VsCode Chamado: **src/index.js**: escreva:[m
[31m-[m
[31m-```[m
[31m-console.log("Ol√°, JavaScript!");[m
[31m-```[m
[31m-[m
[31m-## 6. Inicializar Git e primeiro commit[m
[31m-[m
[31m-```[m
[31m-git init                          # cria .git/[m
[31m-git add .                         # adiciona tudo ao staging[m
[31m-git commit -m "Inicializa projeto JavaScript"[m
[31m-```[m
[31m-[m
[31m-## 7. Criar e usar branch de aprofundamento[m
[31m-[m
[31m->> A nova branch foi denominada aprofundamento1[m
[31m-[m
[31m-```[m
[31m-git checkout -b aprofundamento1   # cria e muda para ela.[m
[31m-```[m
[31m-[m
[31m-[m
[31m->> Ap√≥s a cria√ß√£o da nova branch e de verificar atrav√©s do `git branch` em que branch estamos trabalhando.  na nova branch os proximos passos s√£o:[m
[31m-## 8. Commit na nova branch: aprofundamento1[m
[31m-[m
[31m-```[m
[31m-git add . # informa os arquivos que ser√£o enviados ao github[m
[31m-git commit -m "feat: adiciona log de sauda√ß√£o" # marca o titulo daquela atualiza√ß√£o[m
[31m-```[m
[31m-[m
[31m-## 9. Publicar branch no GitHub[m
[31m-[m
[31m-[m
[31m-```[m
[31m-git push -u origin aprofundamento1[m
[31m-```[m
[31m-[m
[31m-* ***`-u`** vincula sua branch local √† `origin/aprofundamento1` no remoto.[m
[31m-[m
[31m-## 10. Como rodar seu c√≥digo no CMD[m
[31m-[m
[31m-```[m
[31m-node src\index.js #direto no cmd, executa a pasta index.js[m
[31m-```[m
[31m-[m
[31m-```[m
[31m-"scripts": {[m
[31m-  "start": "node src/index.js" #via Script npm em package.json[m
[31m-}[m
[31m-```[m
[31m-[m
[31m-```[m
[31m-npm start[m
[31m-```[m
[31m-[m
[31m-```[m
[31m-node -e "console.log('Teste r√°pido'); # executa os comando do console [m
[31m-```[m
